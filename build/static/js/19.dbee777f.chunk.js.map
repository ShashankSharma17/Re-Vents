{"version":3,"sources":["features/user/PeopleDashboard/PersonCard.jsx","features/user/PeopleDashboard/PeopleDashboard.jsx"],"names":["PersonCard","_ref","user","react_default","a","createElement","dist_es","as","Link","to","concat","id","src","photoURL","Content","textAlign","Header","content","displayName","Meta","city","compose","connect","state","followings","firestore","ordered","following","followers","auth","firebase","firestoreConnect","props","collection","doc","uid","subcollections","storeAs","query","_ref2","Column","width","dividing","Group","itemsPerRow","stackable","map","follower","PeopleDashboard_PersonCard","key"],"mappings":"iKAkBeA,EAdI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACpB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAIC,IAAMC,GAAE,YAAAC,OAAcR,EAAKS,KACnCR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOM,IAAKV,EAAKW,WACjBV,EAAAC,EAAAC,cAACC,EAAA,EAAKQ,QAAN,CAAcC,UAAU,UACtBZ,EAAAC,EAAAC,cAACC,EAAA,EAAKU,OAAN,CAAaC,QAASf,EAAKgB,eAE7Bf,EAAAC,EAAAC,cAACC,EAAA,EAAKa,KAAN,CAAWJ,UAAU,UACnBZ,EAAAC,EAAAC,cAAA,YAAOH,EAAKkB,SC6CLC,4BACbC,kBAlCe,SAAAC,GAAK,MAAK,CACzBC,WAAYD,EAAME,UAAUC,QAAQC,UACpCC,UAAWL,EAAME,UAAUC,QAAQE,UACnCC,KAAMN,EAAMO,SAASD,QAgCrBE,2BAAiB,SAAAC,GAAK,OApDV,SAAA/B,GAAc,IAAX4B,EAAW5B,EAAX4B,KACf,MAAO,CACL,CACEI,WAAY,QACZC,IAAKL,EAAKM,IACVC,eAAgB,CAAC,CAAEH,WAAY,cAC/BI,QAAS,aAEX,CACEJ,WAAY,QACZC,IAAKL,EAAKM,IACVC,eAAgB,CAAC,CAAEH,WAAY,cAC/BI,QAAS,cAwCaC,CAAMN,KAFnBX,CA3BS,SAAAkB,GAA+B,IAA5Bf,EAA4Be,EAA5Bf,WAAYI,EAAgBW,EAAhBX,UACrC,OACEzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAKkC,OAAN,CAAaC,MAAO,IAClBtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoC,UAAQ,EAACzB,QAAQ,wBACzBd,EAAAC,EAAAC,cAACC,EAAA,EAAKqC,MAAN,CAAYC,YAAa,EAAGC,WAAS,GAClCjB,GACCA,EAAUkB,IAAI,SAAAC,GAAQ,OACpB5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAYC,IAAKF,EAASpC,GAAIT,KAAM6C,QAI5C5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQoC,UAAQ,EAACzB,QAAQ,yBACzBd,EAAAC,EAAAC,cAACC,EAAA,EAAKqC,MAAN,CAAYC,YAAa,EAAGC,WAAS,GAClCrB,GACCA,EAAWsB,IAAI,SAAAnB,GAAS,OACtBxB,EAAAC,EAAAC,cAAC2C,EAAD,CAAYC,IAAKtB,EAAUhB,GAAIT,KAAMyB","file":"static/js/19.dbee777f.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst PersonCard = ({ user }) => {\n  return (\n    <Card as={Link} to={`/profile/${user.id}`}>\n      <Image src={user.photoURL} />\n      <Card.Content textAlign='center'>\n        <Card.Header content={user.displayName} />\n      </Card.Content>\n      <Card.Meta textAlign='center'>\n        <span>{user.city}</span>\n      </Card.Meta>\n    </Card>\n  )\n}\n\nexport default PersonCard\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Grid, Segment, Header, Card } from 'semantic-ui-react'\r\nimport PersonCard from './PersonCard'\r\n\r\nconst query = ({ auth }) => {\r\n  return [\r\n    {\r\n      collection: 'users',\r\n      doc: auth.uid,\r\n      subcollections: [{ collection: 'following' }],\r\n      storeAs: 'following'\r\n    },\r\n    {\r\n      collection: 'users',\r\n      doc: auth.uid,\r\n      subcollections: [{ collection: 'followers' }],\r\n      storeAs: 'followers'\r\n    }\r\n  ]\r\n}\r\n\r\nconst mapState = state => ({\r\n  followings: state.firestore.ordered.following,\r\n  followers: state.firestore.ordered.followers,\r\n  auth: state.firebase.auth\r\n})\r\n\r\nconst PeopleDashboard = ({ followings, followers }) => {\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <Segment>\r\n          <Header dividing content='People following me' />\r\n          <Card.Group itemsPerRow={8} stackable>\r\n            {followers &&\r\n              followers.map(follower => (\r\n                <PersonCard key={follower.id} user={follower} />\r\n              ))}\r\n          </Card.Group>\r\n        </Segment>\r\n        <Segment>\r\n          <Header dividing content=\"People I'm following\" />\r\n          <Card.Group itemsPerRow={8} stackable>\r\n            {followings &&\r\n              followings.map(following => (\r\n                <PersonCard key={following.id} user={following} />\r\n              ))}\r\n          </Card.Group>\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default compose(\r\n  connect(mapState),\r\n  firestoreConnect(props => query(props))\r\n)(PeopleDashboard)\r\n"],"sourceRoot":""}